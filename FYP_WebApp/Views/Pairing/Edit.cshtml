@model FYP_WebApp.Models.PairingViewModel

@{
    ViewBag.Title = "Edit Pairing";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @if (Model.ConflictingPairings != null && Model.ConflictingPairings.Count > 0)
        {
            <div class="alert alert-danger" role="alert">
                <h4 class="alert-heading">Important</h4>
                <p>There are already existing pairings for the selected users intersecting with the specified dates.</p>
                <hr>
                <p class="mb-0">Your pairing conflicts with the following existing pairings:</p>
                <div>
                    <ul>
                        @foreach (var pairing in Model.ConflictingPairings)
                        {
                            <li>@pairing.DisplayString</li>
                        }
                    </ul>
                </div>
            </div>
        }

        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Pairing.Id)

        <div class="card rounded shadow mb-3">
            <h5 class="card-header">Time Information</h5>
            <div class="card-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartDate, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.StartDate, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartTime, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartTime, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.StartTime, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndDate, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.EndDate, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndTime, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndTime, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.EndTime, "", new {@class = "text-danger"})
                    </div>
                </div>

            </div>
        </div>

        <div class="card rounded shadow mb-3">
            <h5 class="card-header">Staff</h5>
            <div class="card-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Pairing.UserId, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Pairing.UserId, (SelectList) Model.UserList, htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.Pairing.UserId, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Pairing.BuddyUserId, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Pairing.BuddyUserId, (SelectList) Model.UserList, htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.Pairing.BuddyUserId, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>


        <div class="card mb-3 rounded shadow">
            <h5 class="card-header">Actions</h5>
            <div class="card-body">
                <button type="submit" class="btn btn-success">
                    <i class="fa fa-check"></i>
                    Submit
                </button>
                <button class="btn btn-danger" onclick="location.href = '@Url.Action("Details", "Pairing", new {id = Model.Pairing.Id})';return false;">
                    <i class="fa fa-times"></i>
                    Cancel
                </button>
            </div>
        </div>
    </div>

}