@model FYP_WebApp.Models.TeamDashboardViewModel

@{
    ViewBag.Title = "My Team";
}

@section scripts
{
    @if (Model.OnDutyMembers != 0)
    {
        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCHpCaID-NBJ4ww4_PZewLLttqi2iKAIQ8"></script>

        <script type="text/javascript">
            $.ajax({
                url: '/TeamDashboard/GetGpsLocations?teamId=@Model.Team.Id',
                type: 'GET',
                success: function(data) {
                    var markers = [];

                    $.each(data,
                        function(index, item) {
                            var marker = {}
                            marker["title"] = item.Name;
                            marker["lat"] = item.Latitude;
                            marker["lng"] = item.Longitude;
                            marker["status"] = item.Status;

                            markers.push(marker);
                        })

                    initializeMap(markers);
                }
            });

            function initializeMap(markers) {
                var GoogleMapOptions = {
                    center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
                    zoom: 6,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };

                var infoWindow = new google.maps.InfoWindow();
                var map = new google.maps.Map(document.getElementById("MapDiv"), GoogleMapOptions);

                for (i = 0; i < markers.length; i++) {
                    var data = markers[i]
                    var location = new google.maps.LatLng(data.lat, data.lng);

                    var marker = new google.maps.Marker({
                        position: location,
                        map: map,
                        title: data.title
                    });

                    (function (marker, data) {
                        google.maps.event.addListener(marker, "click", function (e) {
                            infoWindow.setContent(data.title + "(" + data.status + ")");
                            infoWindow.open(map, marker);
                        });
                    })(marker, data);
                }
            }
        </script>
    }
   
}

<h2>@Model.Team.Name</h2>
<hr/>

<div class="card shadow-lg rounded mb-3">
    <div class="card-header">
        Team Map
    </div>
    <div class="card-body">
        @if (Model.OnDutyMembers == 0)
        {
            <p>None of your team are currently working, when they are, they'll show on a map here.</p>
        }
        else
        {
            <div id="MapDiv" style="width: 100%; height: 500px;">
            </div>
        }
    </div>
</div>

<div class="card shadow-lg rounded mb-3">
    <div class="card-header">
        Team Roster
    </div>
    <div class="card-body">
        <table class="table table-bordered table-striped">
            <tr>
                <th>

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Members[0].FirstName);
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Members[0].Surname)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Members[0].IsInactive)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Members[0].Email)
                </th>
                <th>
                    Status
                </th>
                <th>
                    <p>Flags</p>
                </th>
            </tr>

            @foreach (var item in Model.Members)
            {
                <tr>
                    <td>
                        @if (item.Image != null)
                        {
                            <img class="rounded-circle shadow" src="data:image;base64,@System.Convert.ToBase64String(item.Image)" width="50" height="50" />
                        }
                        else
                        {
                            <img class="rounded-circle shadow" src="../../Content/Images/no-image.png" width="50" height="50" />
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Surname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsInactive)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @if (item.LockoutEndDateUtc != null)
                        {
                            <span class="badge badge-danger">Account Locked</span>
                        }
                        @if (item.IsInactive == true)
                        {
                            <span class="badge badge-dark">Inactive</span>
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

<div class="card shadow-lg rounded mb-3">
    <div class="card-header">
        Unlinked Reports
    </div>
    <div class="card-body">
        <span class="fa fa-info-circle" style="color:dodgerblue; margin-left:5px; margin-right: 5px; margin-top: 5px;"></span>
        <p>Unlinked reports are GPS Reports with no automatic link created. Review the following reports (if any) and provide a location.</p>
        @if (Model.UnlinkedReports != null && Model.UnlinkedReports.Count > 0)
        {
            <div class="scroller">
                  <table class="table table-striped">
                <tr>
                    <th>
                        Report Id
                    </th>
                    <th>
                        Reported
                    </th>
                    <th>
                        Team Member
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>
                @foreach (var item in Model.UnlinkedReports)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Time)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.User.FirstName)
                        </td>
                        <td>
                            @*<button class="btn btn-primary" formtarget="_blank" onclick="location.href = '@Url.Action("Details","GpsReport", new { id = item.Id})';return false;">Details</button>*@
                            <button class="btn btn-primary" formtarget="_blank" onclick="window.open('@Url.Action("Details", "GpsReport", new{id = item.Id})')">Details</button>
                        </td>
                    </tr>
                }
            </table>
            </div>
        }
    </div>
</div>
