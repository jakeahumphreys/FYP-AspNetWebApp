@model FYP_WebApp.Models.RegisterViewModel
@{
    ViewBag.Title = "Create User";
}


@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })


    <div class="card rounded shadow mb-3">
        <h5 class="card-header">Profile Image (Leave blank to set later)</h5>
        <div class="card-body">
            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="card rounded shadow mb-3">
        <h5 class="card-header">Personal Information</h5>
        <div class="card-body">
            <div class="form-group">
                @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Surname, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Surname, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>

    <div class="card rounded shadow mb-3">
        <h5 class="card-header">Credentials</h5>
        <div class="card-body">
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
            <hr />
            <p>
                <span class="fa fa-info-circle" style="color:dodgerblue; margin-left:5px; margin-right: 5px; margin-top: 5px;"></span>
                This is the 'Password' that will be used if this account wishes to login using the mobile application.
                <br />
            </p>
            <div class="form-group">
                @Html.LabelFor(m => m.MobileLoginKey, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.MobileLoginKey, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>


    <div class="card rounded shadow mb-3">
        <h5 class="card-header">Employee Status</h5>
        <div class="card-body">
            <div class="form-group">
                @Html.LabelFor(m => m.Role, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Role, (SelectList)Model.Roles, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Role, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(m => m.TeamId, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.TeamId, (SelectList)Model.Teams, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.TeamId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="card rounded shadow mb-3">
        <h5 class="card-header">Actions</h5>
        <div class="card-body">
            <div class="form-group">
                <button type="submit" class="btn btn-success">
                    <i class="fa fa-check"></i>
                    Submit
                </button>
                <button type="reset" class="btn btn-warning">
                    <i class="fa fa-sync"></i>
                    Reset
                </button>
                <button class="btn btn-danger" onclick="location.href = '@Url.Action("Index", "Account")';return false;">
                    <i class="fa fa-times"></i>
                    Cancel
                </button>
            </div>
        </div>
    </div>




    

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
